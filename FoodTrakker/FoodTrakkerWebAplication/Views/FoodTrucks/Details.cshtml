@using Microsoft.AspNetCore.Identity
@model FoodTrakker.Services.DTOs.FoodTruckDto;

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
	ViewData["Title"] = "Details";
}


@{
	ViewData["Title"] = "DetailsFoodTruck";
	Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container">
	<br />
	<br />
	<h1>@Model.Name Details</h1>

	<div class="row">
		<div class="col-6">
			<hr />
			<dl>
				<dt class="col-sm-2">
					<label asp-for="@Model.Name">Name:</label>
				</dt>
				<dd class="col-sm-10">
					@Model.Name
				</dd>
				<dt class="col-sm-2">
					<label asp-for="@Model.Type">Cuisine type:</label>
				</dt>
				<dd class="col-sm-10">
					@Model.Type
				</dd>
				<dt class="col-sm-2">
					<label asp-for="@Model.Description">About us:</label>
				</dt>
				<dd class="col-sm-10">
					@Model.Description
				</dd>
				<dt class="col-sm-2">
					<label asp-for="@Model.AvgRating">Avg Rating:</label>
				</dt>
				<dd class="col-sm-10">
					@Model.AvgRating.ToString("0.00") from @Model.ReviewsTotalCount review(s)
				</dd>
				<dd class="col-sm-10">
					@for (var i = 1; i <= Math.Floor(Model.AvgRating); i++)
					{
						<span class="starGlowN"></span>
					}
					@for (var i = (Math.Floor(Model.AvgRating) + 1); i <= 5; i++)
					{
						<span class="starFadeN"></span>
					}
				</dd>
			</dl>
			@if ((User.IsInRole(Roles.Owner) && UserManager.GetUserId(User) == Model.OwnerId) || User.IsInRole(Roles.Administrator))
			{
				<a asp-controller="Owner" asp-action="EditFoodTruck" asp-route-id="@Model.Id" class="btn btn-primary mx-2"><i class="bi bi-pencil-square"></i>Edit</a>
			}
		</div>
		<div class="col-6">
			<div class="gmap_canvas">
				<iframe width="600" height="400" id="gmap_canvas" src="https://maps.google.com/maps?q=@Model.Location.City%20/@Model.Location.Street%20&t=&z=13&ie=UTF8&iwloc=&output=embed" frameborder="1" scrolling="no" marginheight="1" marginwidth="1">
				</iframe><br>
				<style>
					.mapouter {
						position: relative;
						text-align: right;
						height: 500px;
						width: 700px;
					}

					.gmap_canvas {
						overflow: hidden;
						background: none !important;
						height: 500px;
						width: 700px;
					}
				</style>
			</div>
		</div>
	</div>


	<div class="row">
		<h4>Reviews:</h4>
		@await Component.InvokeAsync("FoodTruckReview", @Model.Id)
		<a href="@Url.Action("Index","FoodTrucks")" class="btn btn-secondary"> Back to List</a>

		@if (User.IsInRole(Roles.User))
		{
			if (!Model.HasCurrentUserReview)
			{
				<a asp-controller="User" asp-action="CreateReview" asp-route-id="@Model.Id" class="btn btn-primary mx-2"><i class="bi bi-pencil-square"></i>Add Review</a>
			}
			if (Model.IsAddedToFav)
			{
				<a asp-controller="User" asp-action="RemoveFoodTruckFromFavourites" asp-route-id="@Model.Id" class="btn btn-primary mx-2"><i class="bi bi-pencil-square"></i>Remove From Favourites!</a>
			}
			else
			{
				<a asp-controller="User" asp-action="AddFoodTruckToFavourites" asp-route-id="@Model.Id" class="btn btn-primary mx-2"><i class="bi bi-pencil-square"></i>Add To Favourites!</a>
			}

		}
		<div class="row">
			<div class="col-md-12">
				<div class="form-group">
					@Html.Raw(@ViewBag.Alert)
				</div>
			</div>
		</div>
	</div>

</div>

